{"version":3,"sources":["components/Display.js","components/Button.js","components/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Display","string","this","props","data","join","react_default","a","createElement","className","Component","Button","onClick","data-size","size","data-value","value","label","Buttons","children","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calculateOperations","result","state","operations","math","eval","format","precision","setState","handleClick","e","target","getAttribute","newOperations","update","$push","onKeyPress","key","includes","backSpaceOperations","pop","componentWillMount","document","addEventListener","bind","assertThisInitialized","src_components_Display","src_components_Buttons","src_components_Button","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.981ec61c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Display.css';\r\n\r\nclass Display extends Component {\r\n  render() {\r\n    const string = this.props.data.join('');\r\n    return <div className=\"Display\"> {string} </div>;\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.props.onClick}\r\n        className=\"Button\"\r\n        data-size={this.props.size}\r\n        data-value={this.props.value}\r\n      >\r\n        {this.props.label}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport './Buttons.css';\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return <div className=\"Buttons\"> {this.props.children} </div>;\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport math from 'mathjs';\n\nimport './App.css';\n\nimport Display from './components/Display';\nimport Button from './components/Button';\nimport Buttons from './components/Buttons';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { operations: [] };\n  }\n\n  calculateOperations = () => {\n    let result = this.state.operations.join('');\n    if (result) {\n      result = math.eval(result);\n      result = math.format(result, { precision: 14 });\n      this.setState({\n        operations: [result]\n      });\n    }\n  };\n\n  handleClick = e => {\n    const value = e.target.getAttribute('data-value');\n    switch (value) {\n      case 'clear':\n        this.setState({\n          operations: []\n        });\n        break;\n      case 'equal':\n        this.calculateOperations();\n        break;\n      default:\n        const newOperations = update(this.state.operations, {\n          $push: [value]\n        });\n        this.setState({\n          operations: newOperations\n        });\n        break;\n    }\n  };\n\n  onKeyPress = e => {\n    const value = e.key;\n\n    const allowed = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '0',\n      '+',\n      '-',\n      '*',\n      '/',\n      '=',\n      '.',\n      'Enter',\n      'equal',\n      'Escape',\n      'C',\n      'c',\n      'Backspace'\n    ];\n\n    if (allowed.includes(value)) {\n      switch (value) {\n        case 'Escape':\n          this.setState({\n            operations: []\n          });\n          break;\n        case 'C':\n          this.setState({\n            operations: []\n          });\n          break;\n        case 'c':\n          this.setState({\n            operations: []\n          });\n          break;\n        case 'Backspace':\n          const backSpaceOperations = this.state.operations;\n          backSpaceOperations.pop();\n          this.setState({\n            operations: backSpaceOperations\n          });\n          break;\n        case '=':\n        case 'Enter':\n          this.calculateOperations();\n          break;\n        default:\n          const newOperations = update(this.state.operations, {\n            $push: [value]\n          });\n          this.setState({\n            operations: newOperations\n          });\n          break;\n      }\n    }\n  };\n\n  componentWillMount = e => {\n    document.addEventListener('keydown', this.onKeyPress.bind(this));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Display data={this.state.operations} />\n        <Buttons>\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"C\"\n            value=\"clear\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"7\"\n            value=\"7\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"4\"\n            value=\"4\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"1\"\n            value=\"1\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"0\"\n            value=\"0\"\n          />\n\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"/\"\n            value=\"/\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"8\"\n            value=\"8\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"5\"\n            value=\"5\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"2\"\n            value=\"2\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\".\"\n            value=\".\"\n          />\n\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"x\"\n            value=\"*\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"9\"\n            value=\"9\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"6\"\n            value=\"6\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"3\"\n            value=\"3\"\n          />\n          <Button label=\"\" value=\"null\" />\n\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"-\"\n            value=\"-\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"+\"\n            size=\"2\"\n            value=\"+\"\n          />\n          <Button\n            onClick={this.handleClick}\n            onKeyPress={this.onKeyPress}\n            label=\"=\"\n            size=\"2\"\n            value=\"equal\"\n          />\n        </Buttons>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}